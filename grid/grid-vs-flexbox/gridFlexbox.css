html {
    min-height: 100vh;
}

body {
    min-height: 100%;
    display: grid;
    background: bisque;
    row-gap: 3rem;
}

.firstExample {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
}

.firstExample > p {
    grid-column: 1 / 3;
    text-align: center;
    font-size: 20px;
    color: black;
}

.firstFlexExample {
    min-height: 200px;
    border: orangered 1px solid;
    border-radius: 12px;
    display: flex;
    align-items: flex-end;
}

.firstFlexExample > div {
    border: 4px solid purple;
    flex: 1 1;
}

.firstFlexExample > .box1 {
    align-self: stretch;
}

.firstFlexExample > .box2 {
    align-self: flex-start;
}

/* using Box alignment properties in CSS Grid */

.firstGridExample {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    align-items: end;
    grid-auto-rows: 200px;
}

.firstGridExample > div {
    border: 4px solid forestgreen;
    flex: 1 1;
}

/* using align-self for aligning content inside of
    grid cell without creating another container
 */
.firstGridExample > .box1 {
    align-self: stretch;
}

.firstGridExample > .box2 {
    align-self: start;
}

.firstGridExample > .box3 {
    align-self: center;
}

.flexboxInGrid {
    min-height: 150px;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.flexboxInGrid > div {
    border: 4px solid orangered;
}

.flexboxInGrid > p {
    text-align: center;
    align-self: center;
    font-size: 30px;
}

.gridASContainingBlockForAbsolutePositioning {
    position: relative;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: 200px;
    min-height: 200px;
    column-gap: 20px;
    border: 4px deeppink solid;
}

.gridASContainingBlockForAbsolutePositioning > div {
    border: 3px pink solid;
}

.gridASContainingBlockForAbsolutePositioning > .box3 {
    position: absolute;
    top: 40px;
    right: 40px;
    left: 80px;
    grid-column: 2/4;
}

.gridWithDisplayContents {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-rows: minmax(100px, auto);
    border: coral 3px solid;
    gap: 15px;
}

.gridWithDisplayContents > div {
    border: #ff5454 3px solid;
    background: #8BD7D2;
}

.gridWithDisplayContents > .box1 {
    grid-column: 1 / 4;
    /*display: grid;
    grid-template-columns: repeat(3, 1fr);*/
    display: contents;
}

.box1 > .nested {
    align-self: center;
    justify-self: center;
}
